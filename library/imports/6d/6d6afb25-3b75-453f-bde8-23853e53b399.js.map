{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\scripts\\Index/assets\\scripts\\Index\\withBullets.ts"],"names":[],"mappings":";;;;;AAAA,6DAAwD;AAElD,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAmB;AAG5C;IAAuC,6BAAY;IADnD;QAAA,qEA+CC;QA3CG,UAAI,GAAQ,IAAI,CAAC;;IA2CrB,CAAC;IAzCG,0BAAM,GAAN;QACI,uBAAuB;QACvB,EAAE,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;QACjD,6DAA6D;QAC7D,mEAAmE;IACvE,CAAC;IAED,0BAAM,GAAN,UAAO,EAAU;QACb,yBAAyB;QACzB,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,EAAE;YAGpC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;YACxB,4BAA4B;SAC/B;IACL,CAAC;IAGD,yBAAK,GAAL,UAAM,IAAS;QACX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAGD,oCAAgB,GAAhB,UAAiB,KAAU,EAAE,IAAS;QAClC,wCAAwC;QACxC,+BAA+B;QAE/B,gCAAgC;QAEhC,+BAA+B;QAE/B,2BAA2B;QAE3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IAE5B,CAAC;IAEM,4BAAQ,GAAf,UAAgB,IAAY;QACxB,kBAAQ,CAAC,KAAK,CAAC,SAAS,EAAC,IAAI,CAAC,CAAA;IAClC,CAAC;IA5CgB,SAAS;QAD7B,OAAO;OACa,SAAS,CA8C7B;IAAD,gBAAC;CA9CD,AA8CC,CA9CsC,EAAE,CAAC,SAAS,GA8ClD;kBA9CoB,SAAS","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\Index","sourcesContent":["import eventBus from \"../../src/base/EventBus/EventBus\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class collision extends cc.Component {\r\n\r\n\r\n    pool: any = null;\r\n\r\n    onLoad() {\r\n        // cc.log(this.node,55)\r\n        cc.director.getCollisionManager().enabled = true;\r\n        // cc.director.getCollisionManager().enabledDebugDraw = true;\r\n        // cc.director.getCollisionManager().enabledDrawBoundingBox = true;\r\n    }\r\n\r\n    update(dt: number) {\r\n        // cc.log(this.node,9999)\r\n        if (this.node.x > cc.winSize.width / 2) {\r\n\r\n           \r\n            this.emitNode(this.node)\r\n            // this.pool.put(this.node);\r\n        }\r\n    }\r\n\r\n\r\n    reuse(pool: any) {\r\n        this.pool = pool;\r\n    }\r\n\r\n\r\n    onCollisionEnter(other: any, self: any) {\r\n        // console.log(`碰撞${other}  : ${self}`);\r\n        // console.log(`碰撞结束${other}`);\r\n        \r\n        // let remove = cc.removeSelf();\r\n        \r\n        // self.node.runAction(remove);\r\n\r\n        // this.pool.put(this.node)\r\n\r\n        this.emitNode(this.node)\r\n\r\n    }\r\n\r\n    public emitNode(node:cc.Node):void {\r\n        eventBus.$emit(\"putNode\",node)\r\n    }\r\n    \r\n}"]}