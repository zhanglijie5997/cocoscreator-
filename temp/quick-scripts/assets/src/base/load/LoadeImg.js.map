{"version":3,"sources":["LoadeImg.ts"],"names":[],"mappings":";;;;;AAAM,IAAA,kBAAkC,EAAjC,oBAAO,EAAC,sBAAQ,CAAkB;AAGzC;IAAsC,4BAAY;IAAlD;;IAyEA,CAAC;IAxEI;;;;;;;;;OASG;IACG,0BAAO,GAAd,UAAe,IAAY,EAAC,WAA0B,EAAC,IAAmB;QAAnB,qBAAA,EAAA,YAAmB;QACtE,IAAI,GAAG,GAAG,SAAS,CAAC;QACpB,IAAI,OAAO,GAAG,YAAY,CAAC;QAC3B,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACpB,SAAS;YACT,IAAI,CAAC,WAAW,CAAC,IAAI,EAAC,WAAW,EAAC,CAAC,CAAC,CAAA;SACvC;aAAK;YACF,SAAS;YACT,IAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBACf,QAAQ;gBACR,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC,CAAA;aACzC;iBAAK;gBACF,QAAQ;gBACR,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,EAAE,CAAC,EAAE,IAAI,CAAC,CAAA;aAC/C;SACJ;IACL,CAAC;IAED;;;;;;OAMG;IACI,8BAAW,GAAlB,UAAmB,IAAW,EAAC,IAAQ;QACnC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACjC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED;;;;;;OAMG;IACK,8BAAW,GAAnB,UAAoB,IAAY,EAAE,YAA2B,EAAC,IAAe,EAAC,OAAsB;QAAtC,qBAAA,EAAA,QAAe;QAAC,wBAAA,EAAA,eAAsB;QAChG,IAAG,IAAI,KAAK,CAAC,EAAE;YACX,SAAS;YACT,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,UAAC,GAAU,EAAE,QAAa;gBAC9C,IAAG,GAAG;oBAAE,MAAM,GAAG,CAAC;gBAClB,IAAI,cAAc,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBAClD,YAAY,GAAG,cAAc,CAAC;YAClC,CAAC,CAAC,CAAC;SACN;aAAK,IAAG,IAAI,KAAK,CAAC,EAAE;YACjB,cAAc;YACd,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,UAAC,GAAU,EAAE,QAAa;gBAC3C,IAAI,GAAG;oBAAE,MAAM,GAAG,CAAC;gBACnB,IAAI,cAAc,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBAClD,YAAY,GAAG,cAAc,CAAC;YAClC,CAAC,CAAC,CAAC;SACN;aAAK,IAAG,IAAI,KAAK,CAAC,EAAE;YACjB,cAAc;YACd,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAC,GAAG,EAAC,IAAI,EAAC,IAAI,EAAC,OAAO,EAAC,EAAE,UAAC,GAAU,EAAE,QAAa;gBAC9D,IAAI,GAAG;oBAAE,MAAM,GAAG,CAAC;gBACnB,IAAI,cAAc,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBAClD,YAAY,GAAG,cAAc,CAAC;YAClC,CAAC,CAAC,CAAC;SACN;IAEL,CAAC;IAxEgB,QAAQ;QAD5B,OAAO;OACa,QAAQ,CAyE5B;IAAD,eAAC;CAzED,AAyEC,CAzEqC,EAAE,CAAC,SAAS,GAyEjD;kBAzEoB,QAAQ","file":"","sourceRoot":"../../../../../../assets/src/base/load","sourcesContent":["const {ccclass,property} = cc._decorator;\n\n@ccclass\nexport default class LoadeImg extends cc.Component{\n     /**\n      * \n      * @param path        路径\n      * @param spriteFrame 替换的图集名称\n      * @param type        如果加载为网络资源不带后缀，需传入图片类型\n      * @example\n      *       this.loadImg(\"https://www.baidu.com\",img) // 本地图片\n      *       this.loadImg(\"https://www.baidu.com\",img) // 网络带后缀\n      *       this.loadImg(\"https://www.baidu.com\",img,\"png \") // 网络不带后缀\n      */\n    public loadImg(path: string,spriteFrame:cc.SpriteFrame,type:string = 'png'):void {\n        var reg = /\\.png$/g;\n        var loadReg = /resources/g;\n        if (loadReg.test(path)) {\n            // 加载本地文件\n            this._loadeResFn(path,spriteFrame,1)\n        }else {\n            // 加载网络图片\n            if(reg.test(path)) {\n                // 带png的\n                this._loadeResFn(path, spriteFrame, 2)\n            }else {\n                // 不带后缀的\n                this._loadeResFn(path, spriteFrame, 2, type)\n            }\n        }\n    }\n\n    /**\n     * \n     * @param path  路径\n     * @param type  释放资源类型\n     * @example\n     *    this.destoryLoad(\"assets/src/images\",cc.SpriteFrame)\n     */\n    public destoryLoad(path:string,type:any):void {\n        cc.loader.releaseRes(path, type);\n        cc.loader.releaseRes(path);\n    }\n\n    /**\n     * \n     * @param path         路径\n     * @param spriteFrame  替换图集名称\n     * @param type         类型 （1本地 or 2网络带.png or 3网络不带.png）\n     * @param imgType      图片类型\n     */\n    private _loadeResFn(path: string, _spriteFrame:cc.SpriteFrame,type:number = 1,imgType:string = 'png') {\n        if(type === 1) {\n            // 加载本地图片\n            cc.loader.loadRes(path, (err: Error, textTrue: any) => {\n                if(err) throw err;\n                let newSpriteFrame = new cc.SpriteFrame(textTrue);\n                _spriteFrame = newSpriteFrame;\n            });\n        }else if(type === 2) {\n            // 加载远程带png 图片\n            cc.loader.load(path, (err: Error, textTrue: any) => {\n                if (err) throw err;\n                let newSpriteFrame = new cc.SpriteFrame(textTrue);\n                _spriteFrame = newSpriteFrame;\n            });\n        }else if(type === 3) {\n            // 加载远程不带png图片\n            cc.loader.load({url:path,type:imgType}, (err: Error, textTrue: any) => {\n                if (err) throw err;\n                let newSpriteFrame = new cc.SpriteFrame(textTrue);\n                _spriteFrame = newSpriteFrame;\n            });\n        }\n        \n    }\n}\n"]}