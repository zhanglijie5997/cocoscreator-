{"version":3,"sources":["LoadScene.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../../assets/src/base/load","sourcesContent":["import eventBus from \"../EventBus/EventBus\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoadScene extends cc.Component {\r\n    onLoad() {\r\n\r\n    }\r\n    start() { }\r\n    // update(dt:number) {}\r\n    onDestroy() {\r\n\r\n    }\r\n\r\n    private _loadSuccess(err: any, assets: any) {\r\n        if (err) {\r\n            throw new Error(`Assets error`)\r\n        }\r\n        if (assets.loaded) {\r\n            // cc.log(`场景预加载完成`);\r\n            eventBus.$emit(\"scence\", \"场景预加载完成\")\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 资源预加载\r\n     * @param scene 资源名\r\n     */\r\n    public _preLoadScence(scene: string) {\r\n        /**\r\n         * Home and PlayGame 是场景，否则是资源\r\n         */\r\n        if (scene === \"index\" || scene === \"home\") {\r\n            return cc.director.preloadScene(scene, this._load, this._loadSuccess)\r\n        } else {\r\n            return cc.loader.loadRes(scene, this._load, this._audioSuccess)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * 批量加载资源\r\n     * @param load 批量加载资源路径\r\n     * @param fn   回调函数\r\n     */\r\n    public async loadMoreRes(load: string,fn:any): Promise<any> {\r\n       \r\n        await cc.loader.loadResDir(load,cc.AudioClip,fn)\r\n\r\n    }\r\n\r\n    private _load() {\r\n        // cc.log(`场景预加载中`)\r\n    }\r\n    /**\r\n     * \r\n     * @param scene 预加载场景，进入就调用.场景名称\r\n     */\r\n    public _init(scene: string) {\r\n        this._preLoadScence(scene);\r\n    }\r\n\r\n\r\n    private _loadScence(scence: string) {\r\n        return cc.director.loadScene(scence)\r\n    }\r\n\r\n\r\n    /**\r\n     * 跳转场景\r\n     * @param scence 场景名字\r\n     */\r\n    public _nextScence(scence: string) {\r\n        return this._loadScence(scence)\r\n    }\r\n\r\n    /**\r\n     * 预加载一个音频\r\n     * @param path 加载路径\r\n     */\r\n    public _getPreLoadAudio(path: string) {\r\n        cc.audioEngine.preload(path);\r\n    }\r\n\r\n\r\n    private _loadAudio(audio: cc.AudioClip, play: boolean, ) {\r\n        cc.audioEngine.play(audio, play, 1)\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param status 状态\r\n     * @param audio  音频名字\r\n     */\r\n    public _audioStatus(status: string, audio: cc.AudioClip) {\r\n        switch (status) {\r\n            case \"pauseAll\": // 停止所有\r\n                cc.audioEngine.pauseAll();\r\n                break;\r\n            case \"resumeAll\": // 回复所有\r\n                cc.audioEngine.resumeAll();\r\n                break;\r\n            case \"stopAll\": // 关闭所有\r\n                cc.audioEngine.stopAll();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 音频资源加载完成\r\n     * @param err     错误信息f\r\n     * @param assets  资源加载完成\r\n     */\r\n    private _audioSuccess(err: any, assets: any) {\r\n        if (err) {\r\n            throw err;\r\n        }\r\n        if (assets.loaded) {\r\n            eventBus.$emit(\"scence\", \"音频加载完成\")\r\n        }\r\n    }\r\n\r\n    private _audioLoad(err, clip) {\r\n        if (!err) {\r\n            cc.audioEngine.play(clip, true, 0.5);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param url   本地背景音乐地址\r\n     * @param name  开始开始停止,播放音效\r\n     * @param loop   是否循环\r\n     */\r\n    public async _playBackgroundAudio(url: string, name: string, loop: boolean, num: number) {\r\n        switch (name) {\r\n\r\n            case \"playMusic\":   //加载背景音乐\r\n                cc.loader.loadRes(url, cc.AudioClip, this._audioLoad);\r\n                break;\r\n            case \"resumeMusic\": // 恢复播放背景音乐\r\n                cc.audioEngine.resumeAll();\r\n                break;\r\n            case \"stopMusic\": // 停止背景音乐\r\n\r\n                cc.audioEngine.stopAll();\r\n                break;\r\n            case \"pauseMusic\": //暂停播放背景音乐\r\n                cc.audioEngine.pauseMusic();\r\n                break;\r\n            case \"playEffect\": // 播放音效\r\n                cc.loader.loadRes(url, cc.AudioClip, function (err, clip) {\r\n                    cc.audioEngine.playEffect(clip, loop);\r\n                });\r\n                break;\r\n            case \"pauseAllEffects\": // 暂停播放所有音效\r\n                cc.audioEngine.pauseAllEffects();\r\n                break;\r\n            case \"resumeAllEffects\": // 回复播放所有音效\r\n                cc.audioEngine.resumeAllEffects();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this._setAudioVolum(num)\r\n    }\r\n\r\n    /**\r\n     * 设置音量\r\n     * @param num 0-1\r\n     */\r\n    public _setAudioVolum(num: number) {\r\n        cc.audioEngine.setMusicVolume(num);\r\n    }\r\n}"]}