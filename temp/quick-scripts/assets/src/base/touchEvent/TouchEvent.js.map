{"version":3,"sources":["TouchEvent.ts"],"names":[],"mappings":";;;;;AAAM,IAAA,kBAAkC,EAAjC,oBAAO,EAAC,sBAAQ,CAAkB;AAGzC;IAAwC,8BAAY;IAApD;;IA6BA,CAAC;IA3BG;;;;;;;;;OASG;IAEI,0BAAK,GAAZ,UAAa,KAAa,EAAE,IAAa,EAAE,QAAkB,EAAC,UAAyB;QAAvF,iBAKC;QAL6D,2BAAA,EAAA,iBAAyB;QACnF,IAAM,GAAG,GAAwB,IAAI,GAAG,CAAC;YACrC,CAAC,KAAK,EAAE,cAAQ,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,CAAC,CAAA,CAAA,CAAC,CAAC;SACrE,CAAC,CAAA;QACH,OAAO,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAA;IAC1B,CAAC;IAED;;;;;OAKG;IACK,6BAAQ,GAAhB,UAAiB,IAAW,EAAC,EAAW,EAAC,IAAY,EAAC,UAAkB;QACpE,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAC,EAAE,EAAC,IAAI,CAAC,CAAC,CAAA;IAC5E,CAAC;IA5BgB,UAAU;QAD9B,OAAO;OACa,UAAU,CA6B9B;IAAD,iBAAC;CA7BD,AA6BC,CA7BuC,EAAE,CAAC,SAAS,GA6BnD;kBA7BoB,UAAU","file":"","sourceRoot":"../../../../../../assets/src/base/touchEvent","sourcesContent":["const {ccclass,property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TouchEvent extends cc.Component{\r\n\r\n    /**\r\n     * 点击事件封装\r\n     * @param event      点击事件按钮名称\r\n     * @param node       触发事件的节点\r\n     * @param callback   执行的回调函数\r\n     * @param addListren 监听还是移除监听[true:监听,false:移除监听]\r\n     * @example \r\n     *      this.touch(\"touchstart\",this.node,this.fn)       // 监听事件\r\n     *      this.touch(\"touchstart\",this.node,this.fn,false) // 移除监听\r\n     */\r\n\r\n    public touch(event: string, node: cc.Node, callback: Function,addListren:boolean = true):Function{\r\n        const map:Map<string,Function> = new Map([\r\n            [event, () => { this._touchFn(event, callback, node, addListren)}]\r\n        ])\r\n       return map.get(event)()\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param type 点击事件类型\r\n     * @param fn   回调函数\r\n     * @param node 执行的node节点\r\n     */\r\n    private _touchFn(type:string,fn:Function,node:cc.Node,addListren:boolean):any {\r\n        return addListren ? (node.on(type, fn, this)) : (node.off(type,fn,this))\r\n    }\r\n}"]}